--- a/sys/kms/gstkmssink.h.orig	2013-02-10 14:32:49.201332594 +0100
+++ b/sys/kms/gstkmssink.h	2013-02-10 15:01:20.912252377 +0100
@@ -71,6 +71,8 @@
   struct connector conn;
   uint32_t conn_id;
   char *conn_name;
+  uint32_t crtc_id;
+  uint32_t plane_id;
   drmModePlane *plane;
   GstDRMBufferPool *pool;
   /* current displayed buffer and last displayed buffer: */
--- a/sys/kms/gstkmssink.c.orig	2013-02-10 14:15:57.949346520 +0100
+++ b/sys/kms/gstkmssink.c	2013-02-10 15:40:58.501481188 +0100
@@ -59,6 +59,8 @@
   PROP_SCALE,
   PROP_CONNECTOR,
   PROP_CONNECTOR_NAME,
+  PROP_CRTC_ID,
+  PROP_PLANE_ID,
 };
 
 static gboolean
@@ -193,27 +195,40 @@
   if (sink->conn.crtc == -1) {
     GstVideoRectangle dest = { 0 };
     GstVideoRectangle src = { 0 };
-
-    if (sink->conn_name) {
-      if (!gst_drm_connector_find_mode_and_plane_by_name (sink->fd,
-              sink->dev, sink->src_rect.w, sink->src_rect.h,
-              sink->resources, sink->plane_resources, &sink->conn,
-              sink->conn_name, &sink->plane))
-        goto connector_not_found;
+    
+    if (sink->crtc_id > 0 && sink->plane_id > 0) {
+      drmModeCrtcPtr crtc = drmModeGetCrtc(sink->fd, sink->crtc_id);
+      sink->conn.crtc = sink->crtc_id;      
+      
+      sink->plane = drmModeGetPlane (sink->fd, sink->plane_id);
+      
+      dest.w = crtc->mode.hdisplay;
+      dest.h = crtc->mode.vdisplay;
+      
+      drmModeFreeCrtc(crtc);
     } else {
-      sink->conn.id = sink->conn_id;
-      if (!gst_drm_connector_find_mode_and_plane (sink->fd,
-              sink->dev, sink->src_rect.w, sink->src_rect.h,
-              sink->resources, sink->plane_resources, &sink->conn,
-              &sink->plane))
-        goto connector_not_found;
+      if (sink->conn_name) {
+        if (!gst_drm_connector_find_mode_and_plane_by_name (sink->fd,
+                sink->dev, sink->src_rect.w, sink->src_rect.h,
+                sink->resources, sink->plane_resources, &sink->conn,
+                sink->conn_name, &sink->plane))
+          goto connector_not_found;
+      } else {
+        sink->conn.id = sink->conn_id;
+        if (!gst_drm_connector_find_mode_and_plane (sink->fd,
+                sink->dev, sink->src_rect.w, sink->src_rect.h,
+                sink->resources, sink->plane_resources, &sink->conn,
+                &sink->plane))
+          goto connector_not_found;
+      }
+      
+      dest.w = sink->conn.mode->hdisplay;
+      dest.h = sink->conn.mode->vdisplay;
     }
     
     src.w = GST_VIDEO_SINK_WIDTH (sink);
     src.h = GST_VIDEO_SINK_HEIGHT (sink);
-
-    dest.w = sink->conn.mode->hdisplay;
-    dest.h = sink->conn.mode->vdisplay;
+    
     gst_video_sink_center_rect (src, dest, &sink->dst_rect,
         sink->scale);
   }
@@ -361,6 +376,12 @@
       g_free (tmp);
     }
       break;
+    case PROP_CRTC_ID:
+      sink->crtc_id = g_value_get_uint (value);
+      break;
+    case PROP_PLANE_ID:
+      sink->plane_id = g_value_get_uint (value);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -608,6 +629,14 @@
           "DRM connector name (alternative to the connector property, "
           "use $type$index, $type-$index, or $type)", "",
           G_PARAM_WRITABLE | G_PARAM_STATIC_STRINGS));
+  g_object_class_install_property (gobject_class, PROP_CRTC_ID,
+      g_param_spec_uint ("crtc-id", "Crtc Id",
+          "DRM crtc id, ", 0, G_MAXUINT32, 0,
+          G_PARAM_WRITABLE | G_PARAM_STATIC_STRINGS));
+  g_object_class_install_property (gobject_class, PROP_PLANE_ID,
+      g_param_spec_uint ("plane-id", "Plane Id",
+          "DRM plane id, ", 0, G_MAXUINT32, 0,
+          G_PARAM_WRITABLE | G_PARAM_STATIC_STRINGS));
 
   gst_element_class_set_details_simple (gstelement_class,
       "Video sink", "Sink/Video",
